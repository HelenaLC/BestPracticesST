# Introduction {#sec-bkg-introduction}

## Overview

This book provides interactive examples and discussion on the key principles of computational analysis workflows for spatial transcriptomics data, using [Bioconductor](http://bioconductor.org/) in R. The chapters cover individual analysis steps and longer workflows, with included examples consisting of runnable R code and datasets.


## Contents

The chapters are organized into several parts:

- **Introduction:** introduction, background on spatial transcriptomics, and R/Bioconductor data classes

- **Sequencing-based platforms:** chapters on individual analysis steps and extended workflows for data from sequencing-based platforms

- **Imaging-based platforms:** chapters on individual analysis steps and extended workflows for data from imaging-based platforms

- **Appendix:** related resources, acknowledgments


## Scope and who this book is for {#sec-bkg-scope}

The aim of this book is to demonstrate the key principles of computational analysis workflows for spatial transcriptomics data through interactive examples and discussion using R code and example datasets. We assume some familiarity with R programming and an understanding of the types of biological questions that single-cell and spatial transcriptomics can be used to answer. Previous experience with Bioconductor is not required.

The book focuses on downstream analyses, which start with a spot-level or cell-level gene expression count table and spatial coordinates as the main inputs. Preprocessing procedures to generate these inputs from the raw data for the various technological platforms are described in other resources (e.g. in our related book [Visium Data Preprocessing](https://lmweber.org/Visium-data-preprocessing/) for the 10x Genomics Visium platform) and tutorials provided by the platform manufacturers.

For most analysis steps, a number of methods are available to choose from. In general, we will showcase methods that we have found to work well and are computationally scalable, with a preference for methods available through Bioconductor. The book is not intended to provide a comprehensive listing of all available methods.

In the code examples, we will only include methods that are available through Bioconductor or CRAN (in R) or PyPI (in Python). This restriction helps ensure long-term stability and maintainability, enables regular testing via the Bioconductor build system, and makes it easier to adapt the examples to integrate new methods or build extended Bioconductor-based workflows. Some methods that are only available from GitHub or other sources will also be mentioned in the text.


## Bioconductor

[Bioconductor](https://bioconductor.org/) is an 'open source and open development' project providing a cohesive and flexible framework for rigorous and reproducible analyses of high-throughput genomic data in R [@Huber2015]. Bioconductor provides access to more than 2000 contributed R packages, as well as infrastructure maintained by the Bioconductor Core Team, providing a rich analysis environment for users.

A key strength of the Bioconductor framework is the modularity and open development philosophy. Packages are contributed by research groups around the world, with the Bioconductor Core Team coordinating the overall project and maintaining infrastructure, build testing, and development guidelines. Contributed packages use consistent data structures, enabling users to easily connect packages developed by different research groups to build analysis workflows that include the latest state-of-the-art methods. Bioconductor packages also include comprehensive documentation, including long-form tutorials and package vignettes.


## Additional introductory resources

For readers who are new to R and/or Bioconductor, additional useful resources include:

- The [Orchestrating Single-Cell Analysis with Bioconductor (OSCA)](https://bioconductor.org/books/release/OSCA/) online book [@Amezquita2020], which contains comprehensive materials on analysis workflows for non-spatial single-cell data, as well as further introductory materials on R and Bioconductor.

- The [R for Data Science](https://r4ds.had.co.nz/) online book provides an excellent introduction to R.

- [Data Carpentry](https://datacarpentry.org/) and [Software Carpentry](https://software-carpentry.org/) provide online lesson materials on R programming, the Unix shell, and version control.

- The R/Bioconductor Data Science Team at the Lieber Institute for Brain Development has a [detailed guide](https://lcolladotor.github.io/bioc_team_ds/rbioconductor-data-science-bootcamps.html) of free resources and videos to learn more about R and Bioconductor, as well as [YouTube videos](https://www.youtube.com/c/LeonardoColladoTorres/playlists), including some on the basics of Bioconductor and infrastructure for storing gene expression data.


## Feedback and contributions

We welcome feedback, suggestions, and contributions from readers in the research community. These may be provided as [GitHub](https://github.com/lmweber/PrinciplesSTA) issues for further discussion with the developers.

Note that all methods used within code examples must be available as packages from either Bioconductor or CRAN (in R) or PyPI (in Python) (see @sec-bkg-scope).


## References {.unnumbered}
